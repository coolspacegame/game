[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://clrbjx046tm8c"]

[ext_resource type="Texture2D" uid="uid://i1xtnpthr1uw" path="res://img/sphere-norm.png" id="1_sgp4j"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_xuu0y"]
output_port_for_preview = 0
texture = ExtResource("1_sgp4j")
texture_type = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_1khi5"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_sgp4j"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_xuu0y"]

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_1khi5"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_fw644"]
output_port_for_preview = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_2 : hint_normal;



void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(1.000000, 1.000000, 1.000000, 1.000000);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;
	float n_out4p2 = n_out2p0.z;
	float n_out4p3 = n_out2p0.w;


// VectorCompose:5
	vec3 n_out5p0 = vec3(n_out4p0, n_out4p1, n_out4p2);


// VectorFunc:8
	vec3 n_out8p0 = normalize(n_out5p0);


// VectorLen:7
	float n_out7p0 = length(n_out8p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);
	COLOR.a = n_out7p0;


}
"
graph_offset = Vector2(1063.89, 178.894)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1260, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_xuu0y")
nodes/fragment/2/position = Vector2(-220, 280)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_1khi5")
nodes/fragment/3/position = Vector2(40, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_sgp4j")
nodes/fragment/4/position = Vector2(40, 320)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorCompose_xuu0y")
nodes/fragment/5/position = Vector2(320, 300)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorLen_1khi5")
nodes/fragment/7/position = Vector2(860, 780)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorFunc_fw644")
nodes/fragment/8/position = Vector2(480, 500)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 5, 0, 4, 1, 5, 1, 4, 2, 5, 2, 3, 0, 0, 0, 5, 0, 8, 0, 8, 0, 7, 0, 7, 0, 0, 1)
