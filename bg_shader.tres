[gd_resource type="VisualShader" load_steps=27 format=3 uid="uid://bxtj0hvu04viu"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0ru88"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_phihi"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.01, 2, 0.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_0ru88"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_0ru88"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_phihi"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_cgugh"]
output_port_for_preview = 0
input_name = "screen_pixel_size"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ud8al"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeUIntOp" id="VisualShaderNodeUIntOp_taxxb"]

[sub_resource type="VisualShaderNodeUIntOp" id="VisualShaderNodeUIntOp_pqu3d"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_0ru88"]
noise_type = 2
fractal_type = 0
fractal_octaves = 1
cellular_distance_function = 3
cellular_jitter = 0.6

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_0ru88"]
width = 1024
height = 1024
invert = true
seamless = true
seamless_blend_skirt = 0.05
noise = SubResource("FastNoiseLite_0ru88")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_phihi"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_0ru88")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_phihi"]
constant = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_phihi"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(200, 200)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_0ru88"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.97, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(1, 1, 1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_0ru88"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_phihi"]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cgugh"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_ud8al"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 18

[sub_resource type="VisualShaderNodeRandomRange" id="VisualShaderNodeRandomRange_0ru88"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, 0.0, 2, 100.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_taxxb"]
default_input_values = [0, 0.0, 1, 0.013]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_0ru88"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(20, 20)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeUIntOp" id="VisualShaderNodeUIntOp_phihi"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_cgugh"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeUIntOp" id="VisualShaderNodeUIntOp_ud8al"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_taxxb"]
op_type = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_21;



void fragment() {
// UVFunc:26
	vec2 n_in26p1 = vec2(1.00000, 1.00000);
	vec2 n_in26p2 = vec2(0.00000, 0.00000);
	vec2 n_out26p0 = n_in26p2 * n_in26p1 + UV;


// Input:27
	float n_out27p0 = TIME;


// FloatOp:30
	float n_in30p1 = 0.01300;
	float n_out30p0 = n_out27p0 * n_in30p1;


// VectorOp:28
	vec2 n_out28p0 = n_out26p0 + vec2(n_out30p0);


// VectorFunc:29
	vec2 n_out29p0 = fract(n_out28p0);


// Texture2D:21
	vec4 n_out21p0 = texture(tex_frg_21, n_out29p0);


	vec3 n_out25p0;
// If:25
	float n_in25p1 = 0.97000;
	float n_in25p2 = 0.00001;
	vec3 n_in25p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in25p4 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in25p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out21p0.x - n_in25p1) < n_in25p2)
	{
		n_out25p0 = n_in25p3;
	}
	else if(n_out21p0.x < n_in25p1)
	{
		n_out25p0 = n_in25p5;
	}
	else
	{
		n_out25p0 = n_in25p4;
	}


// Output:0
	COLOR.rgb = n_out25p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(-1100, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeRandomRange_0ru88")
nodes/fragment/3/position = Vector2(-720, 720)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_0ru88")
nodes/fragment/5/position = Vector2(-660, 340)
nodes/fragment/6/node = SubResource("VisualShaderNodeUIntOp_phihi")
nodes/fragment/6/position = Vector2(40, 440)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorDecompose_cgugh")
nodes/fragment/7/position = Vector2(-380, 400)
nodes/fragment/8/node = SubResource("VisualShaderNodeUIntOp_ud8al")
nodes/fragment/8/position = Vector2(80, 640)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorCompose_taxxb")
nodes/fragment/9/position = Vector2(440, 400)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_0ru88")
nodes/fragment/10/position = Vector2(-2000, 740)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_phihi")
nodes/fragment/12/position = Vector2(-420, 920)
nodes/fragment/13/node = SubResource("VisualShaderNodeColorConstant_0ru88")
nodes/fragment/13/position = Vector2(-900, 1160)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorCompose_0ru88")
nodes/fragment/14/position = Vector2(-980, 880)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorDecompose_phihi")
nodes/fragment/15/position = Vector2(-1420, 960)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_cgugh")
nodes/fragment/16/position = Vector2(-2140, 1040)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_ud8al")
nodes/fragment/17/position = Vector2(-1620, 920)
nodes/fragment/18/node = SubResource("VisualShaderNodeUIntOp_taxxb")
nodes/fragment/18/position = Vector2(-1200, 880)
nodes/fragment/19/node = SubResource("VisualShaderNodeUIntOp_pqu3d")
nodes/fragment/19/position = Vector2(-1220, 1080)
nodes/fragment/21/node = SubResource("VisualShaderNodeTexture_phihi")
nodes/fragment/21/position = Vector2(-1880, 20)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorConstant_phihi")
nodes/fragment/23/position = Vector2(-780, 1080)
nodes/fragment/24/node = SubResource("VisualShaderNodeVectorOp_phihi")
nodes/fragment/24/position = Vector2(-1800, 1100)
nodes/fragment/25/node = SubResource("VisualShaderNodeIf_0ru88")
nodes/fragment/25/position = Vector2(-1440, 80)
nodes/fragment/26/node = SubResource("VisualShaderNodeUVFunc_0ru88")
nodes/fragment/26/position = Vector2(-2680, 60)
nodes/fragment/27/node = SubResource("VisualShaderNodeInput_phihi")
nodes/fragment/27/position = Vector2(-3000, 360)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_cgugh")
nodes/fragment/28/position = Vector2(-2400, 120)
nodes/fragment/29/node = SubResource("VisualShaderNodeVectorFunc_ud8al")
nodes/fragment/29/position = Vector2(-2160, 180)
nodes/fragment/30/node = SubResource("VisualShaderNodeFloatOp_taxxb")
nodes/fragment/30/position = Vector2(-2680, 380)
nodes/fragment/connections = PackedInt32Array(5, 0, 7, 0, 7, 1, 8, 0, 7, 0, 6, 0, 6, 0, 9, 0, 8, 0, 9, 1, 10, 0, 5, 0, 3, 0, 12, 0, 13, 0, 12, 5, 10, 0, 17, 0, 17, 0, 15, 0, 15, 0, 18, 0, 18, 0, 14, 0, 15, 1, 19, 0, 19, 0, 14, 1, 23, 0, 12, 3, 23, 0, 12, 4, 16, 0, 24, 0, 24, 0, 17, 1, 10, 0, 3, 0, 21, 0, 25, 0, 25, 0, 0, 0, 26, 0, 28, 0, 28, 0, 29, 0, 29, 0, 21, 0, 27, 0, 30, 0, 30, 0, 28, 1)
